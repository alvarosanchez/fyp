import com.github.alvarosanchez.GenerateListsTask
import com.github.alvarosanchez.MergePdfsTask
import org.asciidoctor.gradle.AsciidoctorTask

plugins {
  id 'org.ajoberstar.github-pages' version '1.1.0'
  id 'org.asciidoctor.gradle.asciidoctor' version '1.5.1'
  id 'org.asciidoctor.convert' version '1.5.2'
}

apply plugin: 'idea'

githubPages {
  repoUri = 'https://github.com/alvarosanchez/fyp.git' // Set this to the destination repo

  credentials {
    username = project.hasProperty('githubToken') ? project.githubToken : ''
    password = ''
  }

  pages {
    from file(asciidoctor.outputDir.path + '/html5')
    from file(asciidoctor.outputDir.path + '/pdf')
  }
}

version = '1.0.0-SNAPSHOT'

tasks.withType(AsciidoctorTask) {
    attributes  'pdf-stylesdir' : "${projectDir}/src/docs/themes",
                'pdf-fontsdir'  : "${projectDir}/src/docs/fonts",
                'pdf-style'     : 'main',
                'doctype'       : 'book',
                'experimental'  : 'true',
                'compat-mode'   : 'true',
                'toc'           : 'true',
                'icons'         : 'font'
}

asciidoctor {
    backends    'html5','pdf'
}

task listOfFiguresAndTables(type: GenerateListsTask, dependsOn: 'asciidoctor') {
  doFirst {
    copy {
      from asciidoctor.sourceDir
      into "${buildDir}/asciidoc/src"
    }
  }

  source = file(asciidoctor.outputDir.path + '/pdf/index.pdf')
  destination = file("${buildDir}/asciidoc/src/index.adoc")
}

task regenerate(type: AsciidoctorTask, dependsOn: 'listOfFiguresAndTables') {
    sourceDir "${buildDir}/asciidoc/src"
    outputDir "${buildDir}/final"
    backends    'pdf'
}

task buildPdf(type: MergePdfsTask, dependsOn: 'regenerate') {
  sources = files('src/docs/themes/cover.pdf', regenerate.outputDir.path + '/pdf/index.pdf')

  destination = file("${asciidoctor.outputDir.path}/html5/fyp.pdf")
}

publishGhPages.dependsOn buildPdf